[up]
sql:SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
sql:SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
sql:SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL';

rename_column: defaults,id,ID, type : int, length : 11,not_null:true,auto:true
rename_column: exhibitiontrophyclass, id, ID ,type: int, length:11,not_null:true,auto:true

change_column: exhibitionclass, ClassNumber, type: varchar,length:10, not_null:true 
change_column: exhibitionsection, SectionNumber, type: varchar,length:20, not_null:true 
change_column: sponsorship, Prize, type:varchar, length:50, not_null:true

add_index: defaults, fk_defaults_exhibition_idx, columns : [ShowID]

add_index: exhibitionclass, fk_exhibitionclass_exhibition_idx, columns : [ExhibitionID]
add_index: exhibitionclass, fk_exhibitionclass_ExhibitionSection_idx, columns : [ExhibitionSectionID]
add_index: exhibitionclass, fk_exhibitionclass_class_idx, columns : [ClassID]

add_index: exhibitionclassprize, fk_exhibitionclassprize_prize_idx, columns : [PrizeID]
add_index: exhibitionclassprize, fk_exhibitionclassprize_exhibitionclass_idx, columns : [ExhibitionClassID]
add_index: exhibitionclassprize, fk_exhibitionclassprize_exhibitionexhibitor_idx, columns : [ExhibitionExhibitorID]

add_index: exhibitionexhibitor, fk_exhibitionexhibitor_exhibition_idx, columns : [ExhibitionID]
add_index: exhibitionexhibitor, fk_exhibitionexhibitor_exhibitor_idx, columns : [ExhibitorID]

add_index: exhibitionsection, fk_exhibitionsection_exhibition_idx, columns : [ExhibitionID]
add_index: exhibitionsection, fk_exhibitionsection_section_idx, columns : [SectionID]

add_index: exhibitiontrophyclass, fk_exhibitiontrophyclass_trophy_idx, columns : [TrophyID]
add_index: exhibitiontrophyclass, fk_exhibitiontrophyclass_exhibitionclass_idx, columns : [ExhibitionClassID]

add_index: sponsorship, fk_sponsorship_exhibitionclassprize_idx, columns: [ExhibitionClassPrizeID]

add_index: trophy, fk_trophy_exhibition_idx, columns: [ExhibitionID]

sql: ALTER TABLE defaults ADD CONSTRAINT fk_defaults_exhibition FOREIGN KEY (ShowID ) REFERENCES exhibition (ID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

sql: ALTER TABLE exhibitionclass 
  ADD CONSTRAINT fk_exhibitionclass_class
  FOREIGN KEY (ClassID )
  REFERENCES class (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION, 
  ADD CONSTRAINT fk_exhibitionclass_exhibition
  FOREIGN KEY (ExhibitionID )
  REFERENCES exhibition (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION, 
  ADD CONSTRAINT fk_exhibitionclass_exhibitionsection
  FOREIGN KEY (ExhibitionSectionID )
  REFERENCES exhibitionsection (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

sql:ALTER TABLE exhibitionclassprize 
  ADD CONSTRAINT fk_exhibitionclassprize_exhibitionclass
  FOREIGN KEY (ExhibitionClassID )
  REFERENCES exhibitionclass (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION, 
  ADD CONSTRAINT fk_exhibitionclassprize_exhibitionexhibitor
  FOREIGN KEY (ExhibitionExhibitorID )
  REFERENCES exhibitionexhibitor (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION, 
  ADD CONSTRAINT fk_exhibitionclassprize_prize
  FOREIGN KEY (PrizeID )
  REFERENCES prize (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

sql:ALTER TABLE exhibitionexhibitor 
  ADD CONSTRAINT fk_exhibitionexhibitor_exhibition
  FOREIGN KEY (ExhibitionID )
  REFERENCES exhibition (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION, 
  ADD CONSTRAINT fk_exhibitionexhibitor_exhibitor
  FOREIGN KEY (ExhibitorID )
  REFERENCES exhibitor (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

sql:ALTER TABLE exhibitionsection 
  ADD CONSTRAINT fk_exhibitionsection_exhibition
  FOREIGN KEY (ExhibitionID )
  REFERENCES exhibition (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION, 
  ADD CONSTRAINT fk_exhibitionsection_section
  FOREIGN KEY (SectionID )
  REFERENCES section (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

sql:ALTER TABLE exhibitiontrophyclass  
  ADD CONSTRAINT fk_exhibitiontrophyclass_exhibitionclass
  FOREIGN KEY (ExhibitionClassID )
  REFERENCES exhibitionclass (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION, 
  ADD CONSTRAINT fk_exhibitiontrophyclass_trophy
  FOREIGN KEY (TrophyID )
  REFERENCES trophy (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

sql: ALTER TABLE sponsorship
  ADD CONSTRAINT fk_sponsorship_exhibitionclassprize
  FOREIGN KEY (ExhibitionClassPrizeID )
  REFERENCES exhibitionclassprize (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

sql:ALTER TABLE trophy 
  ADD CONSTRAINT fk_trophy_exhibition
  FOREIGN KEY (ExhibitionID )
  REFERENCES exhibition (ID )
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;


sql: CREATE OR REPLACE VIEW defaultexhibitionclass AS select exhibitionclass.ID AS ID,exhibitionclass.ExhibitionID AS ExhibitionID,exhibitionclass.ExhibitionSectionID AS ExhibitionSectionID,exhibitionclass.ClassNumber AS ClassNumber,exhibitionclass.ClassID AS ClassID from (defaults join exhibitionclass on((defaults.ShowID = exhibitionclass.ExhibitionID)));
sql: CREATE OR REPLACE VIEW defaultexhibitionclassprize AS select exhibitionclassprize.ID AS ID,exhibitionclassprize.ExhibitionClassID AS ExhibitionClassID,exhibitionclassprize.PrizeID AS PrizeID,exhibitionclassprize.Prize AS Prize,exhibitionclassprize.Points AS Points,exhibitionclassprize.ExhibitionExhibitorID AS ExhibitionExhibitorID from exhibitionclassprize where exhibitionclassprize.ExhibitionClassID in (select exhibitionclass.ID AS ID from (exhibitionclass join defaults on((defaults.ShowID = exhibitionclass.ExhibitionID))));
sql: CREATE OR REPLACE VIEW defaultexhibitionexhibitor AS select exhibitionexhibitor.ID AS ID,exhibitionexhibitor.ExhibitionID AS ExhibitionID,exhibitionexhibitor.ExhibitorNumber AS ExhibitorNumber,exhibitionexhibitor.ExhibitorID AS ExhibitorID from (exhibitionexhibitor join defaults on((defaults.ShowID = exhibitionexhibitor.ExhibitionID)));
sql: CREATE OR REPLACE VIEW defaultexhibitionsection AS select exhibitionsection.ID AS ID,exhibitionsection.SectionNumber AS SectionNumber,section.Name AS Name from ((exhibitionsection join defaults on((defaults.ShowID = exhibitionsection.ExhibitionID))) join section on((section.ID = exhibitionsection.SectionID)));
sql: CREATE OR REPLACE VIEW defaultexhibitiontrophyclass AS select exhibitiontrophyclass.ID AS id,exhibitiontrophyclass.TrophyID AS trophyid,exhibitiontrophyclass.ExhibitionClassID AS exhibitionclassid from exhibitiontrophyclass where exhibitiontrophyclass.ExhibitionClassID in (select exhibitionclass.ID AS ID from (exhibitionclass join defaults on((defaults.ShowID = exhibitionclass.ExhibitionID))));
sql: CREATE OR REPLACE VIEW defaultprizefund AS select exhibitor.ID AS ID,sum(exhibitionclassprize.Prize) AS Prize,sum(exhibitionclassprize.Points) AS Points from ((((exhibitionclass join defaults on((exhibitionclass.ExhibitionID = defaults.ShowID))) join exhibitionclassprize on((exhibitionclass.ID = exhibitionclassprize.ExhibitionClassID))) join exhibitionexhibitor on((exhibitionclassprize.ExhibitionExhibitorID = exhibitionexhibitor.ID))) join exhibitor on((exhibitionexhibitor.ExhibitorID = exhibitor.ID))) group by exhibitor.ID;
sql: CREATE OR REPLACE VIEW trophyresults AS select trophy.ID AS TrophyID,exhibitionexhibitor.ExhibitorID AS ExhibitorID,sum(exhibitionclassprize.Points) AS Points from (((trophy join exhibitiontrophyclass on((trophy.ID = exhibitiontrophyclass.TrophyID))) join exhibitionclassprize on((exhibitiontrophyclass.ExhibitionClassID = exhibitionclassprize.ExhibitionClassID))) join exhibitionexhibitor on((exhibitionclassprize.ExhibitionExhibitorID = exhibitionexhibitor.ID))) group by trophy.ID,trophy.Name,exhibitionexhibitor.ExhibitorID order by trophy.ID,sum(exhibitionclassprize.Points) desc;

sql: update defaults set id=1 where id=5;

sql:SET SQL_MODE=@OLD_SQL_MODE;
sql:SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
sql:SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

[down]

sql:SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
sql:SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
sql:SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL';




sql:SET SQL_MODE=@OLD_SQL_MODE;
sql:SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
sql:SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;